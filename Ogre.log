23:11:00: Creating resource group General
23:11:00: Creating resource group Internal
23:11:00: Creating resource group Autodetect
23:11:00: SceneManagerFactory for type 'DefaultSceneManager' registered.
23:11:00: Registering ResourceManager for type Material
23:11:00: Registering ResourceManager for type Mesh
23:11:00: Registering ResourceManager for type Skeleton
23:11:00: MovableObjectFactory for type 'ParticleSystem' registered.
23:11:00: ArchiveFactory for archive type FileSystem registered.
23:11:00: ArchiveFactory for archive type Zip registered.
23:11:00: ArchiveFactory for archive type EmbeddedZip registered.
23:11:00: DDS codec registering
23:11:00: FreeImage version: 3.17.0
23:11:00: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
23:11:00: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,sgi,rgb,rgba,bw,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti,x3f,webp,jxr,wdp,hdp
23:11:00: Registering ResourceManager for type HighLevelGpuProgram
23:11:00: Registering ResourceManager for type Compositor
23:11:00: MovableObjectFactory for type 'Entity' registered.
23:11:00: MovableObjectFactory for type 'Light' registered.
23:11:00: MovableObjectFactory for type 'BillboardSet' registered.
23:11:00: MovableObjectFactory for type 'ManualObject' registered.
23:11:00: MovableObjectFactory for type 'BillboardChain' registered.
23:11:00: MovableObjectFactory for type 'RibbonTrail' registered.
23:11:00: Loading library /usr/lib64/OGRE/RenderSystem_GL
23:11:00: Installing plugin: GL RenderSystem
23:11:00: OpenGL Rendering Subsystem created.
23:11:00: Plugin successfully installed
23:11:00: *-*-* OGRE Initialising
23:11:00: *-*-* Version 1.9.0 (Ghadamon)
23:11:00: Creating resource group Fonts
23:11:00: Added resource location 'media/fonts' of type 'FileSystem' to resource group 'Fonts'
23:11:00: Added resource location 'media' of type 'FileSystem' to resource group 'General'
23:11:00: Added resource location 'media/xml_schemas' of type 'FileSystem' to resource group 'General'
23:11:00: Creating resource group Imagesets
23:11:00: Added resource location 'media/imagesets' of type 'FileSystem' to resource group 'Imagesets'
23:11:00: Creating resource group Layouts
23:11:00: Added resource location 'media/layouts' of type 'FileSystem' to resource group 'Layouts'
23:11:00: Creating resource group LookNFeel
23:11:00: Added resource location 'media/looknfeel' of type 'FileSystem' to resource group 'LookNFeel'
23:11:00: Creating resource group Schemes
23:11:00: Added resource location 'media/schemes' of type 'FileSystem' to resource group 'Schemes'
23:11:00: CPU Identifier & Features
23:11:00: -------------------------
23:11:00:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
23:11:00:  *      SSE: yes
23:11:00:  *     SSE2: yes
23:11:00:  *     SSE3: yes
23:11:00:  *      MMX: yes
23:11:00:  *   MMXEXT: yes
23:11:00:  *    3DNOW: no
23:11:00:  * 3DNOWEXT: no
23:11:00:  *     CMOV: yes
23:11:00:  *      TSC: yes
23:11:00:  *      FPU: yes
23:11:00:  *      PRO: yes
23:11:00:  *       HT: no
23:11:00: -------------------------
23:11:00: ******************************
*** Starting GLX Subsystem ***
******************************
23:11:00: Registering ResourceManager for type Texture
23:11:00: GLRenderSystem::_createRenderWindow "HUNDIR LA FLOTA", 800x600 windowed  miscParams: FSAA=0 displayFrequency=56 MHz gamma=No vsync=No 
23:11:00: GLXWindow::create used FBConfigID = 165
23:11:00: GL_VERSION = 4.5.0 NVIDIA 361.42
23:11:00: GL_VENDOR = NVIDIA Corporation
23:11:00: GL_RENDERER = GeForce GTX 960/PCIe/SSE2
23:11:00: GL_EXTENSIONS = GL_AMD_multi_draw_indirect GL_AMD_seamless_cubemap_per_texture GL_AMD_vertex_shader_viewport_index GL_AMD_vertex_shader_layer GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_conditional_render_inverted GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_indirect GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_ES2_compatibility GL_ARB_ES3_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_2_compatibility GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_fragment_shader_interlock GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_int64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_parallel_shader_compile GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_post_depth_coverage GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_locations GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counter_ops GL_ARB_shader_atomic_counters GL_ARB_shader_ballot GL_ARB_shader_bit_encoding GL_ARB_shader_clock GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shader_viewport_layer_array GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_sparse_texture2 GL_ARB_sparse_texture_clamp GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_filter_minmax GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_polygon_offset_clamp GL_EXT_post_depth_coverage GL_EXT_provoking_vertex GL_EXT_raster_multisample GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shader_image_load_formatted GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_sparse_texture2 GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_filter_minmax GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_EXT_x11_sync_object GL_EXT_import_sync_object GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KHR_context_flush_control GL_KHR_debug GL_KHR_no_error GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KTX_buffer_region GL_NV_bindless_multi_draw_indirect GL_NV_bindless_multi_draw_indirect_count GL_NV_bindless_texture GL_NV_blend_equation_advanced GL_NV_blend_equation_advanced_coherent GL_NV_blend_square GL_NV_command_list GL_NV_compute_program5 GL_NV_conditional_render GL_NV_conservative_raster GL_NV_conservative_raster_dilate GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_draw_texture GL_NV_ES1_1_compatibility GL_NV_ES3_1_compatibility GL_NV_explicit_multisample GL_NV_fence GL_NV_fill_rectangle GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_coverage_to_color GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_fragment_shader_interlock GL_NV_framebuffer_mixed_samples GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_geometry_shader_passthrough GL_NV_gpu_program4 GL_NV_internalformat_sample_query GL_NV_gpu_program4_1 GL_NV_gpu_program5 GL_NV_gpu_program5_mem_extended GL_NV_gpu_program_fp64 GL_NV_gpu_shader5 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_path_rendering GL_NV_path_rendering_shared_edge GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_sample_locations GL_NV_sample_mask_override_coverage GL_NV_shader_atomic_counters GL_NV_shader_atomic_float GL_NV_shader_atomic_fp16_vector GL_NV_shader_atomic_int64 GL_NV_shader_buffer_load GL_NV_shader_storage_buffer_object GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_uniform_buffer_unified_memory GL_NV_vdpau_interop GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_attrib_integer_64bit GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NV_viewport_array2 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_NVX_nvenc_interop GL_NV_shader_thread_group GL_NV_shader_thread_shuffle GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum 
23:11:00: Supported GLX extensions: GLX_EXT_visual_info GLX_EXT_visual_rating GLX_SGIX_fbconfig GLX_SGIX_pbuffer GLX_SGI_video_sync GLX_SGI_swap_control GLX_EXT_swap_control GLX_EXT_swap_control_tear GLX_EXT_texture_from_pixmap GLX_EXT_buffer_age GLX_ARB_create_context GLX_ARB_create_context_profile GLX_EXT_create_context_es_profile GLX_EXT_create_context_es2_profile GLX_ARB_create_context_robustness GLX_NV_delay_before_swap GLX_EXT_stereo_tree GLX_ARB_context_flush_control GLX_ARB_multisample GLX_NV_float_buffer GLX_ARB_fbconfig_float GLX_EXT_framebuffer_sRGB GLX_NV_copy_image GLX_ARB_get_proc_address 
23:11:00: ***************************
23:11:00: *** GL Renderer Started ***
23:11:00: ***************************
23:11:00: Registering ResourceManager for type GpuProgram
23:11:00: GLSL support detected
23:11:00: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
23:11:00: FBO PF_UNKNOWN depth/stencil support: D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_L8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_A4L4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_BYTE_LA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_R5G6B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_B5G6R5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_A4R4G4B4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:00: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_R3G3B2 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT16_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT32_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: FBO PF_SHORT_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
23:11:01: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A4R4G4B4 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
23:11:01: RenderSystem capabilities
23:11:01: -------------------------
23:11:01: RenderSystem Name: OpenGL Rendering Subsystem
23:11:01: GPU Vendor: nvidia
23:11:01: Device Name: GeForce GTX 960/PCIe/SSE2
23:11:01: Driver Version: 4.5.0.0
23:11:01:  * Fixed function pipeline: yes
23:11:01:  * Hardware generation of mipmaps: yes
23:11:01:  * Texture blending: yes
23:11:01:  * Anisotropic texture filtering: yes
23:11:01:  * Dot product texture operation: yes
23:11:01:  * Cube mapping: yes
23:11:01:  * Hardware stencil buffer: yes
23:11:01:    - Stencil depth: 8
23:11:01:    - Two sided stencil support: yes
23:11:01:    - Wrap stencil values: yes
23:11:01:  * Hardware vertex / index buffers: yes
23:11:01:  * Vertex programs: yes
23:11:01:  * Number of floating-point constants for vertex programs: 1024
23:11:01:  * Number of integer constants for vertex programs: 0
23:11:01:  * Number of boolean constants for vertex programs: 0
23:11:01:  * Fragment programs: yes
23:11:01:  * Number of floating-point constants for fragment programs: 1024
23:11:01:  * Number of integer constants for fragment programs: 0
23:11:01:  * Number of boolean constants for fragment programs: 0
23:11:01:  * Geometry programs: yes
23:11:01:  * Number of floating-point constants for geometry programs: 2048
23:11:01:  * Number of integer constants for geometry programs: 0
23:11:01:  * Number of boolean constants for geometry programs: 0
23:11:01:  * Tesselation Hull programs: no
23:11:01:  * Number of floating-point constants for tesselation hull programs: 0
23:11:01:  * Number of integer constants for tesselation hull programs: 0
23:11:01:  * Number of boolean constants for tesselation hull programs: 0
23:11:01:  * Tesselation Domain programs: no
23:11:01:  * Number of floating-point constants for tesselation domain programs: 0
23:11:01:  * Number of integer constants for tesselation domain programs: 0
23:11:01:  * Number of boolean constants for tesselation domain programs: 0
23:11:01:  * Compute programs: no
23:11:01:  * Number of floating-point constants for compute programs: 0
23:11:01:  * Number of integer constants for compute programs: 0
23:11:01:  * Number of boolean constants for compute programs: 0
23:11:01:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
23:11:01:  * Texture Compression: yes
23:11:01:    - DXT: yes
23:11:01:    - VTC: yes
23:11:01:    - PVRTC: no
23:11:01:    - ATC: no
23:11:01:    - ETC1: no
23:11:01:    - ETC2: no
23:11:01:    - BC4/BC5: no
23:11:01:    - BC6H/BC7: no
23:11:01:  * Scissor Rectangle: yes
23:11:01:  * Hardware Occlusion Query: yes
23:11:01:  * User clip planes: yes
23:11:01:  * VET_UBYTE4 vertex element type: yes
23:11:01:  * Infinite far plane projection: yes
23:11:01:  * Hardware render-to-texture: yes
23:11:01:  * Floating point textures: yes
23:11:01:  * Non-power-of-two textures: yes
23:11:01:  * 1d textures: yes
23:11:01:  * Volume textures: yes
23:11:01:  * Multiple Render Targets: 8
23:11:01:    - With different bit depths: yes
23:11:01:  * Point Sprites: yes
23:11:01:  * Extended point parameters: yes
23:11:01:  * Max Point Size: 2047
23:11:01:  * Vertex texture fetch: yes
23:11:01:  * Number of world matrices: 0
23:11:01:  * Number of texture units: 16
23:11:01:  * Stencil buffer depth: 8
23:11:01:  * Number of vertex blend matrices: 0
23:11:01:    - Max vertex textures: 32
23:11:01:    - Vertex textures shared: yes
23:11:01:  * Render to Vertex Buffer : yes
23:11:01:  * Hardware Atomic Counters: no
23:11:01:  * GL 1.5 without VBO workaround: no
23:11:01:  * Frame Buffer objects: yes
23:11:01:  * Frame Buffer objects (ARB extension): no
23:11:01:  * Frame Buffer objects (ATI extension): no
23:11:01:  * PBuffer support: yes
23:11:01:  * GL 1.5 without HW-occlusion workaround: no
23:11:01:  * Vertex Array Objects: no
23:11:01:  * Separate shader objects: no
23:11:01: DefaultWorkQueue('Root') initialising on thread 7f9951f53840.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9942a62700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9943a64700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9943263700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9942261700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9944a66700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9944265700 starting.
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9941a60700 starting.
23:11:01: Particle Renderer Type 'billboard' registered
23:11:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9945267700 starting.
23:11:01: Parsing scripts for resource group Autodetect
23:11:01: Finished parsing scripts for resource group Autodetect
23:11:01: Creating resources for group Autodetect
23:11:01: All done
23:11:01: Parsing scripts for resource group Fonts
23:11:01: Finished parsing scripts for resource group Fonts
23:11:01: Creating resources for group Fonts
23:11:01: All done
23:11:01: Parsing scripts for resource group General
23:11:01: Parsing script MaterialTocado.material
23:11:01: Parsing script Sinbad.material
23:11:01: Parsing script MaterialAcorazado.material
23:11:01: Parsing script MaterialPortaviones.material
23:11:01: Parsing script Ground.material
23:11:01: Parsing script MaterialGenerico.material
23:11:01: Parsing script Ogre.material
23:11:01: Parsing script Material.material
23:11:01: Parsing script MaterialTablero.material
23:11:01: Parsing script MaterialMisil.material
23:11:01: Parsing script MaterialLancha.material
23:11:01: Parsing script MaterialAgua.material
23:11:01: Parsing script panel.material
23:11:01: Finished parsing scripts for resource group General
23:11:01: Creating resources for group General
23:11:01: All done
23:11:01: Parsing scripts for resource group Imagesets
23:11:01: Finished parsing scripts for resource group Imagesets
23:11:01: Creating resources for group Imagesets
23:11:01: All done
23:11:01: Parsing scripts for resource group Internal
23:11:01: Finished parsing scripts for resource group Internal
23:11:01: Creating resources for group Internal
23:11:01: All done
23:11:01: Parsing scripts for resource group Layouts
23:11:01: Finished parsing scripts for resource group Layouts
23:11:01: Creating resources for group Layouts
23:11:01: All done
23:11:01: Parsing scripts for resource group LookNFeel
23:11:01: Finished parsing scripts for resource group LookNFeel
23:11:01: Creating resources for group LookNFeel
23:11:01: All done
23:11:01: Parsing scripts for resource group Schemes
23:11:01: Finished parsing scripts for resource group Schemes
23:11:01: Creating resources for group Schemes
23:11:01: All done
23:11:02: Mesh: Loading tableroCol.mesh.
23:11:02: Mesh: Loading CasillaCol.mesh.
23:11:02: Mesh: Loading Casilla.mesh.
23:11:02: Texture: HoverCasilla.png: Loading 1 faces(PF_A8R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,512x512x1.
23:11:02: Texture: NoHoverCasilla.png: Loading 1 faces(PF_A8R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,512x512x1.
23:11:02: Texture: spot_shadow_fade.png: Loading 1 faces(PF_R8G8B8,128x128x1) with 7 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,128x128x1.
23:11:05: Mesh: Loading Portaviones.mesh.
23:11:06: Mesh: Loading Acorazado.mesh.
23:11:08: OGRE EXCEPTION(4:ItemIdentityException): An object of type 'Entity' with name 'entAcorazado' already exists. in SceneManager::createMovableObject at /builddir/build/BUILD/ogre-1.9.0/OgreMain/src/OgreSceneManager.cpp (line 6832)
23:11:10: DefaultWorkQueue('Root') shutting down on thread 7f9951f53840.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9942a62700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9943a64700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9944a66700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9944265700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9942261700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9941a60700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9945267700 stopped.
23:11:10: DefaultWorkQueue('Root')::WorkerFunc - thread 7f9943263700 stopped.
23:11:10: *-*-* OGRE Shutdown
23:11:10: Unregistering ResourceManager for type Compositor
23:11:10: Unregistering ResourceManager for type Skeleton
23:11:10: Unregistering ResourceManager for type Mesh
23:11:10: Unregistering ResourceManager for type HighLevelGpuProgram
23:11:10: Uninstalling plugin: GL RenderSystem
23:11:10: Unregistering ResourceManager for type GpuProgram
23:11:10: ******************************
*** Stopping GLX Subsystem ***
******************************
23:11:10: Unregistering ResourceManager for type Texture
23:11:10: Plugin successfully uninstalled
23:11:10: Unloading library /usr/lib64/OGRE/RenderSystem_GL
23:11:10: Unregistering ResourceManager for type Material
